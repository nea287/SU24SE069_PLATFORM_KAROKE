// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SU24SE069_PLATFORM_KAROKE_DataAccess.Models;

#nullable disable

namespace SU24SE069_PLATFORM_KAROKE_DataAccess.Migrations
{
    [DbContext(typeof(KokDBContext))]
    [Migration("20240621093000_migrations")]
    partial class migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("AccountStatus")
                        .HasColumnType("int")
                        .HasColumnName("account_status");

                    b.Property<Guid?>("CharacterItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("character_item_id");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fullname");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("IdentityCardNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identity_card_number");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit")
                        .HasColumnName("is_online");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phone_number");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<Guid?>("RoomItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_item_id");

                    b.Property<decimal>("Star")
                        .HasColumnType("money")
                        .HasColumnName("star");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.Property<int?>("Yob")
                        .HasColumnType("int")
                        .HasColumnName("yob");

                    b.HasKey("AccountId");

                    b.HasIndex(new[] { "CharacterItemId" }, "IX_Account_character_item_id");

                    b.HasIndex(new[] { "RoomItemId" }, "IX_Account_room_item_id");

                    b.HasIndex(new[] { "UserName" }, "UQ__Account__7C9273C4BE4FEFD8")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Account__AB6E6164AF554E58")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.AccountInventoryItem", b =>
                {
                    b.Property<Guid>("AccountInventoryItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_inventory_item_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("ActivateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("activate_date");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemStatus")
                        .HasColumnType("int")
                        .HasColumnName("item_status");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("AccountInventoryItemId");

                    b.HasIndex(new[] { "ItemId" }, "IX_AccountInventoryItem_item_id");

                    b.HasIndex(new[] { "MemberId" }, "IX_AccountInventoryItem_member_id");

                    b.HasIndex(new[] { "AccountInventoryItemId" }, "UQ__AccountI__3C30841ED7833689")
                        .IsUnique();

                    b.ToTable("AccountInventoryItem", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Conversation", b =>
                {
                    b.Property<Guid>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("conversation_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ConversationType")
                        .HasColumnType("int")
                        .HasColumnName("conversation_type");

                    b.Property<Guid>("MemberId1")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id_1");

                    b.Property<Guid>("MemberId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id_2");

                    b.Property<Guid>("SupportRequestId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("support_request_id");

                    b.HasKey("ConversationId");

                    b.HasIndex(new[] { "MemberId1" }, "IX_Conversation_member_id_1");

                    b.HasIndex(new[] { "MemberId2" }, "IX_Conversation_member_id_2");

                    b.HasIndex(new[] { "SupportRequestId" }, "IX_Conversation_support_request_id");

                    b.HasIndex(new[] { "ConversationId" }, "UQ__Conversa__311E7E9B9619D04A")
                        .IsUnique();

                    b.ToTable("Conversation", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.FavouriteSong", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("song_id");

                    b.HasKey("MemberId", "SongId")
                        .HasName("PK__Favourit__68C8DFD514CDDEC7");

                    b.HasIndex("SongId");

                    b.ToTable("FavouriteSong", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Friend", b =>
                {
                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sender_id");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("receiver_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("SenderId", "ReceiverId")
                        .HasName("PK__Friend__39A74E2FEA2EB197");

                    b.HasIndex(new[] { "ReceiverId" }, "IX_Friend_receiver_id");

                    b.ToTable("Friend", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.InAppTransaction", b =>
                {
                    b.Property<Guid>("InAppTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("in_app_transaction_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("item_id");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("song_id");

                    b.Property<decimal>("StarAmount")
                        .HasColumnType("money")
                        .HasColumnName("star_amount");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type");

                    b.HasKey("InAppTransactionId");

                    b.HasIndex(new[] { "ItemId" }, "IX_InAppTransaction_item_id");

                    b.HasIndex(new[] { "MemberId" }, "IX_InAppTransaction_member_id");

                    b.HasIndex(new[] { "SongId" }, "IX_InAppTransaction_song_id");

                    b.HasIndex(new[] { "InAppTransactionId" }, "UQ__InAppTra__783D788F3120721B")
                        .IsUnique();

                    b.ToTable("InAppTransaction", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("item_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("CanExpire")
                        .HasColumnType("bit")
                        .HasColumnName("can_expire");

                    b.Property<bool?>("CanStack")
                        .HasColumnType("bit")
                        .HasColumnName("can_stack");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("item_code");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item_description");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item_name");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("money")
                        .HasColumnName("item_price");

                    b.Property<int>("ItemStatus")
                        .HasColumnType("int")
                        .HasColumnName("item_status");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<string>("PrefabCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("prefab_code");

                    b.HasKey("ItemId");

                    b.HasIndex(new[] { "CreatorId" }, "IX_Item_creator_id");

                    b.HasIndex(new[] { "ItemCode" }, "UQ__Item__4A67201E86BAC7DD")
                        .IsUnique();

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.KaraokeRoom", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<string>("RoomLog")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("room_log");

                    b.HasKey("RoomId")
                        .HasName("PK__KaraokeR__19675A8A6BA327E4");

                    b.HasIndex(new[] { "CreatorId" }, "IX_KaraokeRoom_creator_id");

                    b.HasIndex(new[] { "RoomId" }, "UQ__KaraokeR__19675A8BC5A9ED1B")
                        .IsUnique();

                    b.ToTable("KaraokeRoom", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.LoginActivity", b =>
                {
                    b.Property<Guid>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("login_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("LoginDevice")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("login_device");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime")
                        .HasColumnName("login_time");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.HasKey("LoginId")
                        .HasName("PK__LoginAct__C2C971DB811BF7A3");

                    b.HasIndex(new[] { "MemberId" }, "IX_LoginActivity_member_id");

                    b.HasIndex(new[] { "LoginId" }, "UQ__LoginAct__C2C971DA5DBB7ACA")
                        .IsUnique();

                    b.ToTable("LoginActivity", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("message_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("conversation_id");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sender_id");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("time_stamp");

                    b.HasKey("MessageId");

                    b.HasIndex(new[] { "ConversationId" }, "IX_Message_conversation_id");

                    b.HasIndex(new[] { "SenderId" }, "IX_Message_sender_id");

                    b.HasIndex(new[] { "MessageId" }, "UQ__Message__0BBF6EE78703A3BB")
                        .IsUnique();

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.MoneyTransaction", b =>
                {
                    b.Property<Guid>("MoneyTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("money_transaction_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<decimal>("MoneyAmount")
                        .HasColumnType("money")
                        .HasColumnName("money_amount");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("package_id");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_code");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int")
                        .HasColumnName("payment_type");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("MoneyTransactionId");

                    b.HasIndex(new[] { "MemberId" }, "IX_MoneyTransaction_member_id");

                    b.HasIndex(new[] { "PackageId" }, "IX_MoneyTransaction_package_id");

                    b.HasIndex(new[] { "MoneyTransactionId" }, "UQ__MoneyTra__EC443D7DCAA4141D")
                        .IsUnique();

                    b.ToTable("MoneyTransaction", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Package", b =>
                {
                    b.Property<Guid>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("package_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<decimal?>("MoneyAmount")
                        .HasColumnType("money")
                        .HasColumnName("money_amount");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("package_name");

                    b.Property<int>("StarNumber")
                        .HasColumnType("int")
                        .HasColumnName("star_number");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("PackageId");

                    b.HasIndex(new[] { "CreatorId" }, "IX_Package_creator_id");

                    b.HasIndex(new[] { "PackageId" }, "UQ__Package__63846AE9D3373BE0")
                        .IsUnique();

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", b =>
                {
                    b.Property<Guid>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("post_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Caption")
                        .HasColumnType("text")
                        .HasColumnName("caption");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<Guid>("RecordingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recording_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime")
                        .HasColumnName("upload_time");

                    b.HasKey("PostId");

                    b.HasIndex(new[] { "MemberId" }, "IX_Post_member_id");

                    b.HasIndex(new[] { "RecordingId" }, "IX_Post_recording_id");

                    b.HasIndex(new[] { "PostId" }, "UQ__Post__3ED78767E3F1F3DF")
                        .IsUnique();

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PostRate", b =>
                {
                    b.Property<Guid>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rate_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("category");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("post_id");

                    b.Property<int?>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.HasKey("RateId")
                        .HasName("PK_PostRate_rate_id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PostId");

                    b.ToTable("PostRate", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PostShare", b =>
                {
                    b.Property<Guid>("PostShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("post_share_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Caption")
                        .HasColumnType("text")
                        .HasColumnName("caption");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("post_id");

                    b.Property<DateTime>("ShareTime")
                        .HasColumnType("datetime")
                        .HasColumnName("share_time");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.HasKey("PostShareId");

                    b.HasIndex(new[] { "MemberId" }, "IX_PostShare_member_id");

                    b.HasIndex(new[] { "PostId" }, "IX_PostShare_post_id");

                    b.HasIndex(new[] { "PostShareId" }, "UQ__PostShar__6F03FC20AE6B0180")
                        .IsUnique();

                    b.ToTable("PostShare", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PurchasedSong", b =>
                {
                    b.Property<Guid>("PurchasedSongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("purchased_song_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("purchase_date");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("song_id");

                    b.HasKey("PurchasedSongId");

                    b.HasIndex(new[] { "MemberId" }, "IX_PurchasedSong_member_id");

                    b.HasIndex(new[] { "SongId" }, "IX_PurchasedSong_song_id");

                    b.HasIndex(new[] { "PurchasedSongId" }, "UQ__Purchase__12FEA5F379BFEF7C")
                        .IsUnique();

                    b.ToTable("PurchasedSong", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Recording", b =>
                {
                    b.Property<Guid>("RecordingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recording_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("host_id");

                    b.Property<Guid>("KaraokeRoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("karaoke_room_id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owner_id");

                    b.Property<string>("RecordingName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("recording_name");

                    b.Property<int>("RecordingType")
                        .HasColumnType("int")
                        .HasColumnName("recording_type");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("song_id");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("RecordingId");

                    b.HasIndex(new[] { "HostId" }, "IX_Recording_host_id");

                    b.HasIndex(new[] { "KaraokeRoomId" }, "IX_Recording_karaoke_room_id");

                    b.HasIndex(new[] { "OwnerId" }, "IX_Recording_owner_id");

                    b.HasIndex(new[] { "SongId" }, "IX_Recording_song_id");

                    b.HasIndex(new[] { "RecordingId" }, "UQ__Recordin__0C5B24E46D5CE3E3")
                        .IsUnique();

                    b.ToTable("Recording", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("report_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("comment_id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("post_id");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("reason");

                    b.Property<int>("ReportCategory")
                        .HasColumnType("int")
                        .HasColumnName("report_category");

                    b.Property<int>("ReportType")
                        .HasColumnType("int")
                        .HasColumnName("report_type");

                    b.Property<Guid>("ReportedAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reported_account_id");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reporter_id");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("ReportId");

                    b.HasIndex(new[] { "CommentId" }, "IX_Report_comment_id");

                    b.HasIndex(new[] { "PostId" }, "IX_Report_post_id");

                    b.HasIndex(new[] { "ReportedAccountId" }, "IX_Report_reported_account_id");

                    b.HasIndex(new[] { "ReporterId" }, "IX_Report_reporter_id");

                    b.HasIndex(new[] { "RoomId" }, "IX_Report_room_id");

                    b.HasIndex(new[] { "ReportId" }, "UQ__Report__779B7C5917900A24")
                        .IsUnique();

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", b =>
                {
                    b.Property<Guid>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("song_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("author");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<DateTime?>("PublicDate")
                        .HasColumnType("datetime")
                        .HasColumnName("public_date");

                    b.Property<string>("Singer")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("singer");

                    b.Property<string>("SongCode")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("song_code");

                    b.Property<string>("SongDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("song_description");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("song_name");

                    b.Property<int>("SongStatus")
                        .HasColumnType("int")
                        .HasColumnName("song_status");

                    b.Property<string>("SongUrl")
                        .HasColumnType("text")
                        .HasColumnName("song_url");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("SongId");

                    b.HasIndex(new[] { "CreatorId" }, "IX_Song_creator_id");

                    b.HasIndex(new[] { "SongCode" }, "UQ__Song__43F33A39E8877F76")
                        .IsUnique()
                        .HasFilter("([song_code] IS NOT NULL)");

                    b.ToTable("Song", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.SupportRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("request_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("problem");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sender_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("RequestId")
                        .HasName("PK__SupportR__18D3B90FC2899572");

                    b.HasIndex(new[] { "SenderId" }, "IX_SupportRequest_sender_id");

                    b.HasIndex(new[] { "RequestId" }, "UQ__SupportR__18D3B90EB565E032")
                        .IsUnique();

                    b.ToTable("SupportRequest", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.VoiceAudio", b =>
                {
                    b.Property<Guid>("VoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("voice_id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<double>("DurationSecond")
                        .HasColumnType("float")
                        .HasColumnName("duration_second");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("member_id");

                    b.Property<int>("Pitch")
                        .HasColumnType("int")
                        .HasColumnName("pitch");

                    b.Property<Guid>("RecordingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recording_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime")
                        .HasColumnName("upload_time");

                    b.Property<string>("VoiceUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("voice_url");

                    b.HasKey("VoiceId")
                        .HasName("PK__VoiceAud__128AF381A07F9D92");

                    b.HasIndex(new[] { "MemberId" }, "IX_VoiceAudio_member_id");

                    b.HasIndex(new[] { "RecordingId" }, "IX_VoiceAudio_recording_id");

                    b.HasIndex(new[] { "VoiceId" }, "UQ__VoiceAud__128AF3808BA35F61")
                        .IsUnique();

                    b.ToTable("VoiceAudio", (string)null);
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.AccountInventoryItem", "CharacterItem")
                        .WithMany("AccountCharacterItems")
                        .HasForeignKey("CharacterItemId")
                        .HasConstraintName("FK__Account__charact__7C4F7684");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.AccountInventoryItem", "RoomItem")
                        .WithMany("AccountRoomItems")
                        .HasForeignKey("RoomItemId")
                        .HasConstraintName("FK__Account__room_it__7D439ABD");

                    b.Navigation("CharacterItem");

                    b.Navigation("RoomItem");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.AccountInventoryItem", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Item", "Item")
                        .WithMany("AccountInventoryItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__AccountIn__item___7E37BEF6");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("AccountInventoryItems")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__AccountIn__membe__7F2BE32F");

                    b.Navigation("Item");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Conversation", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "MemberId1Navigation")
                        .WithMany("ConversationMemberId1Navigations")
                        .HasForeignKey("MemberId1")
                        .IsRequired()
                        .HasConstraintName("FK__Conversat__membe__00200768");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "MemberId2Navigation")
                        .WithMany("ConversationMemberId2Navigations")
                        .HasForeignKey("MemberId2")
                        .IsRequired()
                        .HasConstraintName("FK__Conversat__membe__01142BA1");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.SupportRequest", "SupportRequest")
                        .WithMany("Conversations")
                        .HasForeignKey("SupportRequestId")
                        .IsRequired()
                        .HasConstraintName("FK__Conversat__suppo__02084FDA");

                    b.Navigation("MemberId1Navigation");

                    b.Navigation("MemberId2Navigation");

                    b.Navigation("SupportRequest");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.FavouriteSong", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("FavouriteSongs")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Favourite__membe__02FC7413");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", "Song")
                        .WithMany("FavouriteSongs")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK__Favourite__song___03F0984C");

                    b.Navigation("Member");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Friend", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Receiver")
                        .WithMany("FriendReceivers")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK__Friend__receiver__04E4BC85");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Sender")
                        .WithMany("FriendSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Friend__sender_i__05D8E0BE");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.InAppTransaction", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Item", "Item")
                        .WithMany("InAppTransactions")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__InAppTran__item___06CD04F7");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("InAppTransactions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__InAppTran__membe__07C12930");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", "Song")
                        .WithMany("InAppTransactions")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK__InAppTran__song___08B54D69");

                    b.Navigation("Item");

                    b.Navigation("Member");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Item", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Creator")
                        .WithMany("Items")
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("FK__Item__creator_id__0A9D95DB");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.KaraokeRoom", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Creator")
                        .WithMany("KaraokeRooms")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK__KaraokeRo__creat__0B91BA14");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.LoginActivity", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("LoginActivities")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__LoginActi__membe__0C85DE4D");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Message", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .IsRequired()
                        .HasConstraintName("FK__Message__convers__0E6E26BF");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Message__sender___0F624AF8");

                    b.Navigation("Conversation");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.MoneyTransaction", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("MoneyTransactions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__MoneyTran__membe__10566F31");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Package", "Package")
                        .WithMany("MoneyTransactions")
                        .HasForeignKey("PackageId")
                        .IsRequired()
                        .HasConstraintName("FK__MoneyTran__packa__114A936A");

                    b.Navigation("Member");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Package", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Creator")
                        .WithMany("Packages")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK__Package__creator__123EB7A3");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("Posts")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__member_id__1332DBDC");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Recording", "Recording")
                        .WithMany("Posts")
                        .HasForeignKey("RecordingId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__recording___14270015");

                    b.Navigation("Member");

                    b.Navigation("Recording");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PostRate", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("PostRates")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_PostRate_Account");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", "Post")
                        .WithMany("PostRates")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_PostRate_Post");

                    b.Navigation("Member");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PostShare", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("PostShares")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__PostShare__membe__17036CC0");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", "Post")
                        .WithMany("PostShares")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__PostShare__post___17F790F9");

                    b.Navigation("Member");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.PurchasedSong", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("PurchasedSongs")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchased__membe__1AD3FDA4");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", "Song")
                        .WithMany("PurchasedSongs")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchased__song___1BC821DD");

                    b.Navigation("Member");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Recording", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Host")
                        .WithMany("RecordingHosts")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("FK__Recording__host___1CBC4616");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.KaraokeRoom", "KaraokeRoom")
                        .WithMany("Recordings")
                        .HasForeignKey("KaraokeRoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Recording__karao__1DB06A4F");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Owner")
                        .WithMany("RecordingOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Recording__owner__1EA48E88");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", "Song")
                        .WithMany("Recordings")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK__Recording__song___1F98B2C1");

                    b.Navigation("Host");

                    b.Navigation("KaraokeRoom");

                    b.Navigation("Owner");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Report", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", "Post")
                        .WithMany("Reports")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__post_id__2180FB33");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "ReportedAccount")
                        .WithMany("ReportReportedAccounts")
                        .HasForeignKey("ReportedAccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__reported__22751F6C");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Reporter")
                        .WithMany("ReportReporters")
                        .HasForeignKey("ReporterId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__reporter__236943A5");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.KaraokeRoom", "Room")
                        .WithMany("Reports")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__room_id__245D67DE");

                    b.Navigation("Post");

                    b.Navigation("ReportedAccount");

                    b.Navigation("Reporter");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Creator")
                        .WithMany("Songs")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK__Song__creator_id__25518C17");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.SupportRequest", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Sender")
                        .WithMany("SupportRequests")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__SupportRe__sende__2645B050");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.VoiceAudio", b =>
                {
                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", "Member")
                        .WithMany("VoiceAudios")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__VoiceAudi__membe__2739D489");

                    b.HasOne("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Recording", "Recording")
                        .WithMany("VoiceAudios")
                        .HasForeignKey("RecordingId")
                        .IsRequired()
                        .HasConstraintName("FK__VoiceAudi__recor__282DF8C2");

                    b.Navigation("Member");

                    b.Navigation("Recording");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Account", b =>
                {
                    b.Navigation("AccountInventoryItems");

                    b.Navigation("ConversationMemberId1Navigations");

                    b.Navigation("ConversationMemberId2Navigations");

                    b.Navigation("FavouriteSongs");

                    b.Navigation("FriendReceivers");

                    b.Navigation("FriendSenders");

                    b.Navigation("InAppTransactions");

                    b.Navigation("Items");

                    b.Navigation("KaraokeRooms");

                    b.Navigation("LoginActivities");

                    b.Navigation("Messages");

                    b.Navigation("MoneyTransactions");

                    b.Navigation("Packages");

                    b.Navigation("PostRates");

                    b.Navigation("PostShares");

                    b.Navigation("Posts");

                    b.Navigation("PurchasedSongs");

                    b.Navigation("RecordingHosts");

                    b.Navigation("RecordingOwners");

                    b.Navigation("ReportReportedAccounts");

                    b.Navigation("ReportReporters");

                    b.Navigation("Songs");

                    b.Navigation("SupportRequests");

                    b.Navigation("VoiceAudios");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.AccountInventoryItem", b =>
                {
                    b.Navigation("AccountCharacterItems");

                    b.Navigation("AccountRoomItems");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Item", b =>
                {
                    b.Navigation("AccountInventoryItems");

                    b.Navigation("InAppTransactions");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.KaraokeRoom", b =>
                {
                    b.Navigation("Recordings");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Package", b =>
                {
                    b.Navigation("MoneyTransactions");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Post", b =>
                {
                    b.Navigation("PostRates");

                    b.Navigation("PostShares");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Recording", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("VoiceAudios");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.Song", b =>
                {
                    b.Navigation("FavouriteSongs");

                    b.Navigation("InAppTransactions");

                    b.Navigation("PurchasedSongs");

                    b.Navigation("Recordings");
                });

            modelBuilder.Entity("SU24SE069_PLATFORM_KAROKE_DataAccess.Models.SupportRequest", b =>
                {
                    b.Navigation("Conversations");
                });
#pragma warning restore 612, 618
        }
    }
}
